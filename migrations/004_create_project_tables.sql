-- Migration 004: Create Project Management Tables
-- WebduhVercel Database Migration
-- Created: 2024-02-06

-- Projects Table
CREATE TABLE projects (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(255) NOT NULL,
    slug VARCHAR(100) NOT NULL,
    description TEXT,
    framework VARCHAR(50), -- nextjs, react, vue, svelte, static, etc.
    repository_url TEXT,
    root_directory VARCHAR(255) DEFAULT '/',
    build_command TEXT,
    output_directory VARCHAR(255),
    install_command TEXT,
    dev_command TEXT,
    team_id UUID NOT NULL REFERENCES teams(id) ON DELETE CASCADE,
    created_by UUID NOT NULL REFERENCES users(id),
    status VARCHAR(50) DEFAULT 'active', -- active, paused, archived
    source_type VARCHAR(50) DEFAULT 'git', -- git, ai-builder, manual, import
    ai_builder_session_id UUID REFERENCES ai_builder_sessions(id),
    file_structure JSONB DEFAULT '{}', -- Cached file structure for quick access
    last_sync_at TIMESTAMPTZ, -- Last time files were synced
    settings JSONB DEFAULT '{}',
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    UNIQUE(team_id, slug)
);

-- Project Files Table
CREATE TABLE project_files (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    project_id UUID NOT NULL REFERENCES projects(id) ON DELETE CASCADE,
    file_path TEXT NOT NULL, -- Relative path from project root
    file_name VARCHAR(255) NOT NULL,
    file_type VARCHAR(50), -- js, ts, tsx, jsx, css, scss, md, json, etc.
    content TEXT, -- File content (for text files)
    content_hash VARCHAR(64), -- SHA-256 hash for change detection
    file_size BIGINT DEFAULT 0, -- File size in bytes
    encoding VARCHAR(20) DEFAULT 'utf8', -- utf8, base64, binary
    is_binary BOOLEAN DEFAULT FALSE,
    mime_type VARCHAR(255),
    parent_directory VARCHAR(1000), -- Parent directory path
    created_by UUID NOT NULL REFERENCES users(id),
    last_modified_by UUID REFERENCES users(id),
    ai_generated BOOLEAN DEFAULT FALSE, -- Whether this file was generated by AI
    ai_builder_session_id UUID REFERENCES ai_builder_sessions(id),
    version INTEGER DEFAULT 1,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    UNIQUE(project_id, file_path)
);

-- Project File Versions Table (for version control)
CREATE TABLE project_file_versions (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    file_id UUID NOT NULL REFERENCES project_files(id) ON DELETE CASCADE,
    version_number INTEGER NOT NULL,
    content TEXT,
    content_hash VARCHAR(64),
    change_description TEXT,
    created_by UUID NOT NULL REFERENCES users(id),
    created_at TIMESTAMPTZ DEFAULT NOW(),
    UNIQUE(file_id, version_number)
);

-- Project Templates Table
CREATE TABLE project_templates (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(255) NOT NULL,
    description TEXT,
    framework VARCHAR(50) NOT NULL,
    category VARCHAR(100), -- frontend, fullstack, api, static, etc.
    tags TEXT[] DEFAULT '{}',
    thumbnail_url TEXT,
    demo_url TEXT,
    repository_url TEXT,
    template_files JSONB NOT NULL, -- Complete file structure and content
    build_config JSONB DEFAULT '{}', -- Build commands, dependencies, etc.
    is_official BOOLEAN DEFAULT FALSE,
    is_public BOOLEAN DEFAULT TRUE,
    download_count INTEGER DEFAULT 0,
    created_by UUID NOT NULL REFERENCES users(id),
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Project Sync History Table
CREATE TABLE project_sync_history (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    project_id UUID NOT NULL REFERENCES projects(id) ON DELETE CASCADE,
    sync_type VARCHAR(50) NOT NULL, -- ai_builder_import, git_sync, manual_upload, api_sync
    source_reference VARCHAR(255), -- AI Builder session ID, commit SHA, etc.
    files_changed INTEGER DEFAULT 0,
    files_added INTEGER DEFAULT 0,
    files_deleted INTEGER DEFAULT 0,
    sync_summary JSONB DEFAULT '{}', -- Summary of changes
    initiated_by UUID NOT NULL REFERENCES users(id),
    completed_at TIMESTAMPTZ,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Environment Variables Table
CREATE TABLE environment_variables (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    project_id UUID NOT NULL REFERENCES projects(id) ON DELETE CASCADE,
    key VARCHAR(255) NOT NULL,
    value TEXT NOT NULL,
    target VARCHAR(50) DEFAULT 'all', -- all, production, preview, development
    encrypted BOOLEAN DEFAULT TRUE,
    created_by UUID NOT NULL REFERENCES users(id),
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    UNIQUE(project_id, key, target)
);

-- Git Integrations Table
CREATE TABLE git_integrations (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    project_id UUID NOT NULL REFERENCES projects(id) ON DELETE CASCADE,
    provider VARCHAR(50) NOT NULL, -- github, gitlab, bitbucket
    repository_id VARCHAR(255) NOT NULL,
    repository_name VARCHAR(255) NOT NULL,
    branch VARCHAR(255) DEFAULT 'main',
    installation_id VARCHAR(255),
    access_token_encrypted TEXT,
    webhook_id VARCHAR(255),
    auto_deploy BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Indexes for Projects
CREATE INDEX idx_projects_team_id ON projects(team_id);
CREATE INDEX idx_projects_slug ON projects(slug);
CREATE INDEX idx_projects_created_by ON projects(created_by);
CREATE INDEX idx_projects_source_type ON projects(source_type);
CREATE INDEX idx_projects_ai_builder_session_id ON projects(ai_builder_session_id);

-- Indexes for Project Files
CREATE INDEX idx_project_files_project_id ON project_files(project_id);
CREATE INDEX idx_project_files_file_path ON project_files(file_path);
CREATE INDEX idx_project_files_file_type ON project_files(file_type);
CREATE INDEX idx_project_files_parent_directory ON project_files(parent_directory);
CREATE INDEX idx_project_files_content_hash ON project_files(content_hash);
CREATE INDEX idx_project_files_ai_generated ON project_files(ai_generated);

-- Indexes for Project File Versions
CREATE INDEX idx_project_file_versions_file_id ON project_file_versions(file_id);
CREATE INDEX idx_project_file_versions_version_number ON project_file_versions(version_number);

-- Indexes for Project Templates
CREATE INDEX idx_project_templates_framework ON project_templates(framework);
CREATE INDEX idx_project_templates_category ON project_templates(category);
CREATE INDEX idx_project_templates_is_public ON project_templates(is_public);
CREATE INDEX idx_project_templates_created_by ON project_templates(created_by);

-- Indexes for Project Sync History
CREATE INDEX idx_project_sync_history_project_id ON project_sync_history(project_id);
CREATE INDEX idx_project_sync_history_sync_type ON project_sync_history(sync_type);
CREATE INDEX idx_project_sync_history_created_at ON project_sync_history(created_at);

-- Add migration tracking
INSERT INTO schema_migrations (version, description) 
VALUES (4, 'Create project management tables')
ON CONFLICT (version) DO NOTHING; 